
0. QUE EL ALGORITMOS AL PRINCIPIO DETECTE PREGUNTAS AL AZAR Y CONFORME VAYA RESPONDIENDO EMPIECE A PREGUNTAR COSAS DE ESA CATEGORIA
0. AGREGAR UNA OPCION DONDE HAYA QUE NO SABE SI ES SU PERSONAJE

1. DEBEMOS DE SOLUCIONAR EL PROBLEMA DONDE EL JUGADOR COLOCA POR ERROR QUE SU PERSONAJE LE GUSTA UN HOBBIE DESDE LAS PRIMERAS 5 preguntas
PERO AL FINAL NO SALEN MAS preguntas DE SU PERSONAJE Y EL JUEGO TERMINA DANDO COMO RESULTADO OTRO PERSONAJE Y NO EL QUE EL JUGADOR ESTA BUSCANDO
2. SOLUCIONAR EL PROBLEMA QUE NO SE PASA EL PROP DE "btnHome" al componente GAME

3. ARREGLAR EL LIMIPIADO DE LOS FORMULARIOS



STATE DEL COMPONENTE "GAME"
resValue > SE GUARDAN LOS HOBBIES QUE EL JUGADOR PONE QUE SI 
hobbiesDB > SE ALMACENAN TODOS LOS HOBBIES QUE ESTAN GUARDADOS EN LA BASE DE datos
questions > 
users >Se almacen todos lo usuarios guardados en la base de datos

STATE DEL COMPONENTE GameQuestions > Guardas la cantidad de personajes que tienen la misma coencidencia de hobbies con un error de -1
ESTOS SON LOS PASOS QUE LLEVA EL PROGRAMA 

COMPONENTES: 
APP > COMPONENTE PRINCIPAL
ERR > Sirve para mostrar en la pagina cuando una URL no exista
Forms > Hay 2 componentes que nos permite guardar un personaje y otro el pasatiempos
Home > Es el componente principal donde puedes comenzar jugar el juego, este componente llama al hijo que es "Game"
Game > Componente padre para luego llamar las preguntas
GameQuestions > Componente que sirve para hacer las preguntas del juego

*********COMPONENTE GameQuestions ********************
----FUNCIONES----------------------
Este componente nosotros tenemos las funciones necesarias para darle logica a todo el juego el cual usamos las siguientes funciones

numPregunta(preguntas);
preguntaRandom();
preguntaRandomFase2();
capRespuestaDelJugador(name);
devolverHobbiesConID();
filtroPersonajes();
buscarPersonajes();
quitarPregunta();
-----------------------------------
PASOS EN COMO SE EJECUTAN LAS FUNCIONES
>>> Si el usuario coloca que "SI" es su personaje para a la funcion "CapRespuestaJugador(name)"
>>>>>> De ahi se va la funcion "quitarPregunta()" para asi pasar a la funcion "preguntaRandom()" 
>>>>>> En "preguntaRandom()" devolvemos un nuevo aleatorio que viene de la funcion "numPregunta()" que tiene la 
       cantidad de pasatiempos que existen para asi mostrar la nueva pregunta y se repite el ciclo de "CapRespuestaJugador(name)" hasta que pasen 5 preguntas
>>>>> Cuando el "iterador" sea igual a 5  pasaremos a la funcion "devolverHobbiesConID" para luego pasar a "devolverIDUsuerDeHobbies()" y hacer el filtro con 
      "filtroPersonajes()" y pasar la fase 2 de preguntas donde ahora solo se devolveran todos los hobbies que existen de los personajes que tuvieron coencidencia
      de los primeros hobbies dichos por el jugador, ahi se muestran nuevas preguntas hasta que termine y nuevamente se pasa a la funcion "devolverHobbiesConID"
      y se repite lo mismo hasta al filtro de personaje y toma otro rumbo el programa para ahora irse a la funcion  "buscarPersonaje()" y ahora si devolver el personaje.

>>>>> Si la respuesta desde el inicio es "NO" entonces pasa a la funcion "noHobbie()" esto para prevenir y que se muestren mas preguntas aparte de las 5 que vienen
      por defecto, al final el rumbo de la aplicacion cambiara hasta que almenos el usuario ponga como respuesta "SI", para que asi  la aplicacion suceda todo con normalidad 
      comor el primer punto mencionado. 
******************************************************


>>>>PROPIEDADES QUE TENDRA EL USUARIO <<<<
BD = USERS
name
email
password
role 
userStatus


DB = USERINFORMATION
lastName
userName
birthDay
phone
country
address 
userID